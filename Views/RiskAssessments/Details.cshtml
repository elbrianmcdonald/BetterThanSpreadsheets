@model CyberRiskApp.Models.RiskAssessment
@{
    ViewData["Title"] = $"Risk Assessment: {Model.Title}";
}

<div class="container-fluid">
    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4><i class="fas fa-shield-alt me-2 text-primary"></i>@Model.Title</h4>
                    @if (User.CanUserPerformAssessments())
                    {
                        <div class="btn-group" role="group">
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-secondary btn-sm">
                                <i class="fas fa-edit me-1"></i>Edit
                            </a>
                            <button class="btn btn-outline-primary btn-sm" onclick="generatePDF()">
                                <i class="fas fa-file-pdf me-1"></i>Export PDF
                            </button>
                        </div>
                    }
                </div>

                <div class="card-body">
                    <!-- Assessment Overview -->
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="info-group">
                                <span class="label"><i class="fas fa-building me-1"></i>Asset:</span>
                                <span class="value">@Model.Asset</span>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.BusinessUnit))
                            {
                                <div class="info-group">
                                    <span class="label"><i class="fas fa-users me-1"></i>Business Unit:</span>
                                    <span class="value">@Model.BusinessUnit</span>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.BusinessOwner))
                            {
                                <div class="info-group">
                                    <span class="label"><i class="fas fa-user-tie me-1"></i>Business Owner:</span>
                                    <span class="value">@Model.BusinessOwner</span>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.TechnicalControlsInPlace))
                            {
                                <div class="info-group">
                                    <span class="label"><i class="fas fa-shield-alt me-1"></i>Technical Controls:</span>
                                    <span class="value">@Model.TechnicalControlsInPlace</span>
                                </div>
                            }
                        </div>
                        <div class="col-md-6">
                            <div class="info-group">
                                <span class="label"><i class="fas fa-calendar me-1"></i>Date Completed:</span>
                                <span class="value">@(Model.DateCompleted?.ToString("MMM dd, yyyy") ?? "In Progress")</span>
                            </div>
                            <div class="info-group">
                                <span class="label"><i class="fas fa-user me-1"></i>Assessor:</span>
                                <span class="value">@Model.Assessor</span>
                            </div>
                            <div class="info-group">
                                <span class="label"><i class="fas fa-clipboard-check me-1"></i>Status:</span>
                                <span class="badge bg-@(Model.Status switch
                                {
                                    CyberRiskApp.Models.AssessmentStatus.Draft => "secondary",
                                    CyberRiskApp.Models.AssessmentStatus.InProgress => "warning",
                                    CyberRiskApp.Models.AssessmentStatus.Completed => "success",
                                    CyberRiskApp.Models.AssessmentStatus.Approved => "primary",
                                    _ => "secondary"
                                })">@Model.Status</span>
                            </div>
                            <div class="info-group">
                                <span class="label"><i class="fas fa-chart-line me-1"></i>Assessment Type:</span>
                                <span class="badge bg-info">@Model.AssessmentType</span>
                            </div>
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <div class="mb-4">
                            <h6><i class="fas fa-info-circle me-1"></i>Description</h6>
                            <p class="text-muted">@Model.Description</p>
                        </div>
                    }

                    <!-- Legacy Threat Scenario Display (for older assessments) -->
                    @if (!string.IsNullOrEmpty(Model.ThreatScenario))
                    {
                        <div class="mb-4">
                            <h6><i class="fas fa-exclamation-triangle me-1"></i>Threat Scenario</h6>
                            <p class="text-muted">@Model.ThreatScenario</p>
                        </div>
                    }

                    <!-- Risk Analysis Results -->
                    <div class="row">
                        @if (Model.AssessmentType == CyberRiskApp.Models.AssessmentType.Qualitative)
                        {
                            <!-- NEW: Threat Scenario-based Qualitative Analysis Results -->
                            @if (Model.ThreatScenarios?.Any() == true)
                            {
                                <div class="col-12">
                                    <h5 class="section-title"><i class="fas fa-chart-bar me-2"></i>Qualitative Risk Analysis</h5>
                                    
                                    <!-- Overall Risk Summary -->
                                    <div class="row g-3 mb-4">
                                        <div class="col-lg-4 col-md-6">
                                            <div class="metric-card bg-primary">
                                                <div class="metric-value">@(Model.CalculateOverallQualitativeRiskScore()?.ToString("F1") ?? "N/A")</div>
                                                <div class="metric-label">Average Risk Score</div>
                                            </div>
                                        </div>

                                        <div class="col-lg-4 col-md-6">
                                            <div class="metric-card bg-@(Model.CalculateRiskLevel().ToLower() switch 
                                            { 
                                                "low" => "success",
                                                "medium" => "warning", 
                                                "high" => "danger",
                                                "critical" => "dark",
                                                _ => "secondary"
                                            })">
                                                <div class="metric-value">@Model.CalculateRiskLevel()</div>
                                                <div class="metric-label">Overall Risk Level</div>
                                            </div>
                                        </div>

                                        <div class="col-lg-4 col-md-6">
                                            <div class="metric-card bg-info">
                                                <div class="metric-value">@Model.ThreatScenarios.Count</div>
                                                <div class="metric-label">Threat Scenarios</div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Threat Scenarios Detail -->
                                    @foreach (var scenario in Model.ThreatScenarios.OrderByDescending(ts => ts.QualitativeRiskScore))
                                    {
                                        <div class="card mb-3 threat-scenario-card">
                                            <div class="card-header">
                                                <div class="d-flex justify-content-between align-items-start">
                                                    <div class="flex-grow-1">
                                                        <h6 class="mb-1"><i class="fas fa-exclamation-triangle me-2"></i>Threat Scenario @(Model.ThreatScenarios.ToList().IndexOf(scenario) + 1)</h6>
                                                        @if (!string.IsNullOrEmpty(scenario.Description))
                                                        {
                                                            <p class="text-muted mb-0 small">@scenario.Description</p>
                                                        }
                                                    </div>
                                                    <div class="text-end">
                                                        @if (scenario.QualitativeRiskScore.HasValue)
                                                        {
                                                            <span class="badge bg-@(scenario.CalculateRiskLevel().ToLower() switch 
                                                            { 
                                                                "low" => "success",
                                                                "medium" => "warning", 
                                                                "high" => "danger",
                                                                "critical" => "dark",
                                                                _ => "secondary"
                                                            }) fs-6">
                                                                @scenario.CalculateRiskLevel()
                                                            </span>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="card-body">
                                                <div class="row g-2 mb-3">
                                                    @if (scenario.QualitativeLikelihood.HasValue)
                                                    {
                                                        <div class="col-lg-2 col-md-4">
                                                            <div class="small-metric-card bg-info">
                                                                <div class="small-metric-value">@scenario.QualitativeLikelihood</div>
                                                                <div class="small-metric-label">Likelihood</div>
                                                            </div>
                                                        </div>
                                                    }
                                                    
                                                    @if (scenario.QualitativeImpact.HasValue)
                                                    {
                                                        <div class="col-lg-2 col-md-4">
                                                            <div class="small-metric-card bg-warning">
                                                                <div class="small-metric-value">@scenario.QualitativeImpact</div>
                                                                <div class="small-metric-label">Impact</div>
                                                            </div>
                                                        </div>
                                                    }

                                                    @if (scenario.QualitativeExposure.HasValue)
                                                    {
                                                        <div class="col-lg-2 col-md-4">
                                                            <div class="small-metric-card bg-secondary">
                                                                <div class="small-metric-value">@scenario.QualitativeExposure.Value.ToString("F2")</div>
                                                                <div class="small-metric-label">Exposure</div>
                                                            </div>
                                                        </div>
                                                    }

                                                    @if (scenario.QualitativeRiskScore.HasValue)
                                                    {
                                                        <div class="col-lg-3 col-md-6">
                                                            <div class="small-metric-card bg-primary">
                                                                <div class="small-metric-value">@scenario.QualitativeRiskScore.Value.ToString("F1")</div>
                                                                <div class="small-metric-label">Risk Score</div>
                                                            </div>
                                                        </div>
                                                    }

                                                    <div class="col-lg-3 col-md-6">
                                                        <div class="small-metric-card bg-@(scenario.CalculateRiskLevel().ToLower() switch 
                                                        { 
                                                            "low" => "success",
                                                            "medium" => "warning", 
                                                            "high" => "danger",
                                                            "critical" => "dark",
                                                            _ => "secondary"
                                                        })">
                                                            <div class="small-metric-value">@scenario.CalculateRiskLevel()</div>
                                                            <div class="small-metric-label">Risk Level</div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <!-- Scenario Risks -->
                                                @if (scenario.IdentifiedRisks?.Any() == true)
                                                {
                                                    <h6><i class="fas fa-exclamation-circle me-1"></i>Identified Risks (@scenario.IdentifiedRisks.Count)</h6>
                                                    <div class="table-responsive">
                                                        <table class="table table-sm table-hover">
                                                            <thead class="table-light">
                                                                <tr>
                                                                    <th>Risk Title</th>
                                                                    <th>Risk Level</th>
                                                                    <th>Treatment</th>
                                                                    <th>Status</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                @foreach (var risk in scenario.IdentifiedRisks.OrderByDescending(r => r.InherentRiskLevel))
                                                                {
                                                                    <tr>
                                                                        <td>
                                                                            <strong>@risk.Title</strong>
                                                                            @if (!string.IsNullOrEmpty(risk.Description))
                                                                            {
                                                                                <br><small class="text-muted">@risk.Description</small>
                                                                            }
                                                                        </td>
                                                                        <td>
                                                                            <span class="badge bg-@(risk.InherentRiskLevel.ToString().ToLower() switch 
                                                                            { 
                                                                                "low" => "success",
                                                                                "medium" => "warning", 
                                                                                "high" => "danger",
                                                                                "critical" => "dark",
                                                                                _ => "secondary"
                                                                            })">
                                                                                @risk.InherentRiskLevel
                                                                            </span>
                                                                        </td>
                                                                        <td>
                                                                            <span class="badge bg-light text-dark">@risk.Treatment</span>
                                                                        </td>
                                                                        <td>
                                                                            <span class="badge bg-@(risk.Status.ToString().ToLower() switch 
                                                                            { 
                                                                                "open" => "danger",
                                                                                "closed" => "success",
                                                                                "accepted" => "warning",
                                                                                "underreview" => "info",
                                                                                _ => "secondary"
                                                                            })">
                                                                                @risk.Status
                                                                            </span>
                                                                        </td>
                                                                    </tr>
                                                                }
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else if (Model.QualitativeRiskScore.HasValue)
                            {
                                <!-- LEGACY: Assessment-level Qualitative Analysis Results -->
                                <div class="col-12">
                                    <h5 class="section-title"><i class="fas fa-chart-bar me-2"></i>Qualitative Risk Analysis (Legacy)</h5>
                                    
                                    <div class="row g-3 mb-4">
                                        <div class="col-lg-2 col-md-4">
                                            <div class="metric-card bg-info">
                                                <div class="metric-value">@Model.QualitativeLikelihood</div>
                                                <div class="metric-label">Likelihood</div>
                                            </div>
                                        </div>
                                        
                                        <div class="col-lg-2 col-md-4">
                                            <div class="metric-card bg-warning">
                                                <div class="metric-value">@Model.QualitativeImpact</div>
                                                <div class="metric-label">Impact</div>
                                            </div>
                                        </div>

                                        <div class="col-lg-2 col-md-4">
                                            <div class="metric-card bg-secondary">
                                                <div class="metric-value">@(Model.QualitativeExposure?.ToString("F2") ?? "N/A")</div>
                                                <div class="metric-label">Exposure</div>
                                            </div>
                                        </div>

                                        <div class="col-lg-3 col-md-6">
                                            <div class="metric-card bg-primary">
                                                <div class="metric-value">@Model.QualitativeRiskScore.Value.ToString("F1")</div>
                                                <div class="metric-label">Risk Score</div>
                                            </div>
                                        </div>

                                        <div class="col-lg-3 col-md-6">
                                            <div class="metric-card bg-@(Model.CalculateRiskLevel().ToLower() switch 
                                            { 
                                                "low" => "success",
                                                "medium" => "warning", 
                                                "high" => "danger",
                                                "critical" => "dark",
                                                _ => "secondary"
                                            })">
                                                <div class="metric-value">@Model.CalculateRiskLevel()</div>
                                                <div class="metric-label">Overall Risk Level</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>

            <!-- Identified Risks (Legacy - only show if not using threat scenarios) -->
            @if (Model.IdentifiedRisks?.Any() == true && !(Model.ThreatScenarios?.Any() == true))
            {
                <div class="card mt-4">
                    <div class="card-header">
                        <h5><i class="fas fa-exclamation-circle me-2"></i>Identified Risks (@Model.IdentifiedRisks.Count)</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Risk</th>
                                        <th>Risk Level</th>
                                        <th>Treatment</th>
                                        <th>Status</th>
                                        <th>Next Review</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var risk in Model.IdentifiedRisks.OrderByDescending(r => r.InherentRiskLevel))
                                    {
                                        <tr>
                                            <td>
                                                <div>
                                                    <strong>@risk.Title</strong>
                                                    @if (!string.IsNullOrEmpty(risk.Description))
                                                    {
                                                        <br><small class="text-muted">@risk.Description</small>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge bg-@(risk.InherentRiskLevel.ToString().ToLower() switch 
                                                { 
                                                    "low" => "success",
                                                    "medium" => "warning", 
                                                    "high" => "danger",
                                                    "critical" => "dark",
                                                    _ => "secondary"
                                                })">
                                                    @risk.InherentRiskLevel
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge bg-light text-dark">@risk.Treatment</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-@(risk.Status.ToString().ToLower() switch 
                                                { 
                                                    "open" => "danger",
                                                    "closed" => "success",
                                                    "accepted" => "warning",
                                                    "underreview" => "info",
                                                    _ => "secondary"
                                                })">
                                                    @risk.Status
                                                </span>
                                            </td>
                                            <td>
                                                @if (risk.NextReviewDate.HasValue)
                                                {
                                                    @risk.NextReviewDate.Value.ToString("MMM dd, yyyy")
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Not set</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }

        </div>

        <!-- Right Sidebar -->
        <div class="col-lg-4">
            <!-- Quick Stats -->
            <div class="card">
                <div class="card-header">
                    <h6><i class="fas fa-info-circle me-1"></i>Assessment Summary</h6>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-6 mb-3">
                            <div class="border-end">
                                <h4 class="text-@(Model.CalculateRiskLevel().ToLower() switch 
                                { 
                                    "low" => "success",
                                    "medium" => "warning", 
                                    "high" => "danger",
                                    "critical" => "dark",
                                    _ => "secondary"
                                })">@Model.CalculateRiskLevel()</h4>
                                <small class="text-muted">Overall Risk</small>
                            </div>
                        </div>
                        <div class="col-6 mb-3">
                            @if (Model.ThreatScenarios?.Any() == true)
                            {
                                <h4 class="text-info">@Model.ThreatScenarios.Count</h4>
                                <small class="text-muted">Scenarios</small>
                            }
                            else
                            {
                                <h4 class="text-info">@Model.IdentifiedRisks.Count</h4>
                                <small class="text-muted">Risks</small>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Controls Summary (if applicable) -->
            @if (Model.QualitativeControls?.Any() == true)
            {
                <div class="card mt-3">
                    <div class="card-header">
                        <h6><i class="fas fa-shield-alt me-1"></i>Controls Summary</h6>
                    </div>
                    <div class="card-body">
                        @if (Model.QualitativeControls?.Any() == true)
                        {
                            <div class="mb-2">
                                <strong>Qualitative Controls:</strong> @Model.QualitativeControls.Count
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Threat Models (if applicable) -->
            @if (Model.LinkedThreatModels?.Any() == true)
            {
                <div class="card mt-3">
                    <div class="card-header">
                        <h6><i class="fas fa-crosshairs me-1"></i>Linked Threat Models</h6>
                    </div>
                    <div class="card-body">
                        @foreach (var threatModel in Model.LinkedThreatModels)
                        {
                            <div class="d-flex align-items-center mb-2">
                                <i class="fas fa-link me-2 text-muted"></i>
                                <span>@threatModel.Name</span>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .info-group {
        margin-bottom: 0.5rem;
    }
    
    .info-group .label {
        display: inline-block;
        width: 140px;
        font-weight: 600;
        color: #6c757d;
    }
    
    .info-group .value {
        font-weight: 500;
    }
    
    .section-title {
        border-bottom: 2px solid #dee2e6;
        padding-bottom: 0.5rem;
        margin-bottom: 1rem;
        color: #495057;
    }
    
    .metric-card {
        background: linear-gradient(135deg, var(--bs-primary), var(--bs-primary));
        color: white;
        padding: 1.5rem;
        border-radius: 0.375rem;
        text-align: center;
        height: 100%;
    }
    
    .metric-card.bg-info { background: linear-gradient(135deg, var(--bs-info), var(--bs-info)); }
    .metric-card.bg-warning { background: linear-gradient(135deg, var(--bs-warning), var(--bs-warning)); }
    .metric-card.bg-success { background: linear-gradient(135deg, var(--bs-success), var(--bs-success)); }
    .metric-card.bg-danger { background: linear-gradient(135deg, var(--bs-danger), var(--bs-danger)); }
    .metric-card.bg-secondary { background: linear-gradient(135deg, var(--bs-secondary), var(--bs-secondary)); }
    .metric-card.bg-dark { background: linear-gradient(135deg, var(--bs-dark), var(--bs-dark)); }
    
    .metric-value {
        font-size: 2rem;
        font-weight: 700;
        line-height: 1.2;
    }
    
    .metric-label {
        font-size: 0.875rem;
        opacity: 0.8;
        margin-top: 0.5rem;
    }

    .small-metric-card {
        background: linear-gradient(135deg, var(--bs-primary), var(--bs-primary));
        color: white;
        padding: 0.75rem;
        border-radius: 0.375rem;
        text-align: center;
        height: 100%;
    }
    
    .small-metric-card.bg-info { background: linear-gradient(135deg, var(--bs-info), var(--bs-info)); }
    .small-metric-card.bg-warning { background: linear-gradient(135deg, var(--bs-warning), var(--bs-warning)); }
    .small-metric-card.bg-success { background: linear-gradient(135deg, var(--bs-success), var(--bs-success)); }
    .small-metric-card.bg-danger { background: linear-gradient(135deg, var(--bs-danger), var(--bs-danger)); }
    .small-metric-card.bg-secondary { background: linear-gradient(135deg, var(--bs-secondary), var(--bs-secondary)); }
    .small-metric-card.bg-dark { background: linear-gradient(135deg, var(--bs-dark), var(--bs-dark)); }
    
    .small-metric-value {
        font-size: 1.25rem;
        font-weight: 600;
        line-height: 1.2;
    }
    
    .small-metric-label {
        font-size: 0.75rem;
        opacity: 0.8;
        margin-top: 0.25rem;
    }

    .threat-scenario-card {
        border-left: 4px solid var(--bs-primary);
    }
    
    .threat-scenario-card .card-header {
        background-color: rgba(var(--bs-primary-rgb), 0.1);
        border-bottom: 1px solid rgba(var(--bs-primary-rgb), 0.2);
    }
</style>

@section Scripts {
    <script>
        function generatePDF() {
            // Simple implementation - redirect to PDF export endpoint
            window.location.href = '/RiskAssessments/ExportToPDF/@Model.Id';
        }
    </script>
}
@model CyberRiskApp.Models.StrategyGoal
@{
    ViewData["Title"] = $"Strategy Goal: {Model.FunctionDomain}";
}

<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>
            <i class="fas fa-bullseye text-primary me-2"></i>
            @Model.FunctionDomain Goal
            <span class="badge bg-@(Model.Priority.ToString().ToLower()) ms-2">@Model.Priority</span>
        </h2>
        <div>
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary">
                <i class="fas fa-edit me-1"></i>Edit Goal
            </a>
            <a asp-controller="Strategy" asp-action="Details" asp-route-id="@Model.StrategyPlanId" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i>Back to Plan
            </a>
        </div>
    </div>

    <!-- Goal Overview -->
    <div class="card mb-4">
        <div class="card-header bg-info bg-opacity-10">
            <h5 class="mb-0">
                <i class="fas fa-info-circle me-2"></i>Goal Overview
            </h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <h6 class="text-muted">Framework</h6>
                    <p class="fw-bold">@Model.MaturityFramework?.Name</p>
                </div>
                <div class="col-md-6">
                    <h6 class="text-muted">Status</h6>
                    <span class="badge bg-@(Model.Status.ToString().ToLower()) fs-6">@Model.Status</span>
                </div>
            </div>
            
            <div class="row">
                <div class="col-md-6">
                    <h6 class="text-muted">Target Date</h6>
                    <p class="fw-bold @(Model.IsOverdue ? "text-danger" : "")">
                        @Model.TargetDate.ToString("MMMM dd, yyyy")
                        @if (Model.IsOverdue)
                        {
                            <small class="d-block text-danger">Overdue</small>
                        }
                    </p>
                </div>
                <div class="col-md-6">
                    <h6 class="text-muted">Progress</h6>
                    <div class="d-flex align-items-center">
                        <div class="progress flex-grow-1" style="height: 25px;">
                            <div class="progress-bar" role="progressbar" style="width: @Model.ProgressPercentage%">
                                @Model.ProgressPercentage.ToString("F0")%
                            </div>
                        </div>
                        <span class="ms-2">@Model.ProgressPercentage.ToString("F0")%</span>
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.Notes))
            {
                <div class="mt-3">
                    <h6 class="text-muted">Notes</h6>
                    <p class="mb-0">@Model.Notes</p>
                </div>
            }
        </div>
    </div>

    <!-- Maturity Progress -->
    <div class="card mb-4">
        <div class="card-header bg-primary bg-opacity-10">
            <h5 class="mb-0">
                <i class="fas fa-chart-line me-2"></i>Maturity Progression
            </h5>
        </div>
        <div class="card-body">
            <div class="row align-items-center">
                <div class="col-md-3 text-center">
                    <h3 class="text-secondary">Level @Model.CurrentMaturityLevel</h3>
                    <p class="text-muted">Current</p>
                </div>
                <div class="col-md-6">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-arrow-right fa-2x text-muted me-3"></i>
                        <div class="flex-grow-1">
                            <div class="progress" style="height: 30px;">
                                <div class="progress-bar bg-gradient" role="progressbar" 
                                     style="width: @((Model.CurrentMaturityLevel / (decimal)Model.TargetMaturityLevel * 100))%">
                                    @Model.MaturityGap level(s) to go
                                </div>
                            </div>
                        </div>
                        <i class="fas fa-arrow-right fa-2x text-muted ms-3"></i>
                    </div>
                </div>
                <div class="col-md-3 text-center">
                    <h3 class="text-primary">Level @Model.TargetMaturityLevel</h3>
                    <p class="text-muted">Target</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Capabilities -->
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
                <i class="fas fa-cogs me-2"></i>Required Capabilities (@Model.Capabilities.Count)
            </h5>
            <div>
                <a href="/CapabilityRequirement/Create?goalId=@Model.Id" class="btn btn-primary btn-sm">
                    <i class="fas fa-plus me-1"></i>Add Capability
                </a>
            </div>
        </div>
        <div class="card-body">
            @if (Model.Capabilities.Any())
            {
                <div class="row">
                    @foreach (var capability in Model.Capabilities.OrderBy(c => c.Priority).ThenBy(c => c.CapabilityName))
                    {
                        <div class="col-lg-6 mb-3">
                            <div class="card border-start border-4 border-@capability.PriorityColor">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <h6 class="card-title mb-0">@capability.CapabilityName</h6>
                                        <span class="badge bg-@capability.StatusColor">@capability.Status</span>
                                    </div>
                                    
                                    <div class="row">
                                        <div class="col-6">
                                            <small class="text-muted">Type:</small>
                                            <div class="fw-bold">@capability.CapabilityType</div>
                                        </div>
                                        <div class="col-6">
                                            <small class="text-muted">Priority:</small>
                                            <div><span class="badge bg-@capability.PriorityColor">@capability.Priority</span></div>
                                        </div>
                                    </div>
                                    
                                    @if (capability.ProgressPercentage > 0)
                                    {
                                        <div class="mt-2">
                                            <small class="text-muted">Progress:</small>
                                            <div class="progress" style="height: 6px;">
                                                <div class="progress-bar" style="width: @capability.ProgressPercentage%"></div>
                                            </div>
                                            <small>@capability.ProgressPercentage%</small>
                                        </div>
                                    }
                                    
                                    <div class="mt-2">
                                        <a href="/CapabilityRequirement/Details/@capability.Id" class="btn btn-outline-info btn-sm">
                                            <i class="fas fa-eye"></i> Details
                                        </a>
                                        <a href="/CapabilityRequirement/Edit/@capability.Id" class="btn btn-outline-primary btn-sm">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-4">
                    <i class="fas fa-cogs fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No Capabilities Defined</h5>
                    <p class="text-muted">Add specific capabilities needed to achieve this maturity goal.</p>
                    <a href="/CapabilityRequirement/Create?goalId=@Model.Id" class="btn btn-primary">
                        <i class="fas fa-plus me-1"></i>Add First Capability
                    </a>
                </div>
            }
        </div>
    </div>

    <!-- Goal Statistics -->
    <div class="row">
        <div class="col-md-4">
            <div class="card border-success">
                <div class="card-body text-center">
                    <h3 class="text-success">@Model.Capabilities.Count(c => c.Status == CyberRiskApp.Models.CapabilityStatus.Completed)</h3>
                    <p class="text-muted mb-0">Completed Capabilities</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-warning">
                <div class="card-body text-center">
                    <h3 class="text-warning">@Model.Capabilities.Count(c => c.Status == CyberRiskApp.Models.CapabilityStatus.InProgress)</h3>
                    <p class="text-muted mb-0">In Progress</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-danger">
                <div class="card-body text-center">
                    <h3 class="text-danger">@Model.Capabilities.Count(c => c.TargetDate < DateTime.UtcNow && c.Status != CyberRiskApp.Models.CapabilityStatus.Completed)</h3>
                    <p class="text-muted mb-0">Overdue</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Optional: Add any goal-specific functionality here
    </script>
}
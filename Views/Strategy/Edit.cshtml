@model CyberRiskApp.Models.StrategyPlan
@{
    ViewData["Title"] = "Edit Strategy Plan";
}

<div class="container-fluid py-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>
                    <i class="fas fa-edit text-primary me-2"></i>
                    Edit Strategy Plan
                </h2>
                <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-1"></i>Cancel
                </a>
            </div>

            <form asp-action="Edit" method="post">
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="CreatedBy" />
                <input type="hidden" asp-for="CreatedAt" />
                
                @if (!ViewData.ModelState.IsValid && ViewData.ModelState.ErrorCount > 0)
                {
                    <div class="alert alert-danger">
                        <h6>Please correct the following errors:</h6>
                        <div asp-validation-summary="All"></div>
                    </div>
                }

                <div class="card">
                    <div class="card-header bg-primary bg-opacity-10">
                        <h5 class="mb-0">
                            <i class="fas fa-info-circle me-2"></i>Plan Details
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="PlanName" class="form-label fw-bold">Plan Name <span class="text-danger">*</span></label>
                                    <input asp-for="PlanName" class="form-control" placeholder="Enter strategy plan name" />
                                    <span asp-validation-for="PlanName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="BusinessOrganizationId" class="form-label fw-bold">Organization <span class="text-danger">*</span></label>
                                    <select asp-for="BusinessOrganizationId" class="form-control" asp-items="ViewBag.Organizations">
                                        <option value="">-- Select Organization --</option>
                                    </select>
                                    <span asp-validation-for="BusinessOrganizationId" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="StartDate" class="form-label fw-bold">Start Date <span class="text-danger">*</span></label>
                                    <input asp-for="StartDate" type="date" class="form-control" />
                                    <span asp-validation-for="StartDate" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="EndDate" class="form-label fw-bold">End Date <span class="text-danger">*</span></label>
                                    <input asp-for="EndDate" type="date" class="form-control" />
                                    <span asp-validation-for="EndDate" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="TotalBudget" class="form-label fw-bold">Total Budget</label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input asp-for="TotalBudget" type="number" class="form-control" placeholder="0.00" step="0.01" />
                                    </div>
                                    <span asp-validation-for="TotalBudget" class="text-danger"></span>
                                    <small class="form-text text-muted">Optional - leave blank if budget not defined</small>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Status" class="form-label fw-bold">Status</label>
                                    <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<CyberRiskApp.Models.StrategyPlanStatus>()">
                                    </select>
                                    <span asp-validation-for="Status" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="SpentBudget" class="form-label fw-bold">Spent Budget</label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input asp-for="SpentBudget" type="number" class="form-control" placeholder="0.00" step="0.01" />
                                    </div>
                                    <span asp-validation-for="SpentBudget" class="text-danger"></span>
                                    @if (Model.TotalBudget.HasValue && Model.SpentBudget.HasValue && Model.SpentBudget > Model.TotalBudget)
                                    {
                                        <small class="text-danger">Warning: Spent budget exceeds total budget</small>
                                    }
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Progress</label>
                                    <div class="progress" style="height: 25px;">
                                        <div class="progress-bar" role="progressbar" style="width: @Model.OverallProgressPercentage%">
                                            @Model.OverallProgressPercentage.ToString("F0")%
                                        </div>
                                    </div>
                                    <small class="form-text text-muted">Calculated based on completed capabilities</small>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label fw-bold">Description</label>
                            <textarea asp-for="Description" class="form-control" rows="4" 
                                     placeholder="Enter a description for this strategy plan (optional)"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <small class="text-muted">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Created by @Model.CreatedBy on @Model.CreatedAt.ToString("MMM dd, yyyy")
                                </small>
                            </div>
                            <div class="col-md-6 text-end">
                                @if (!string.IsNullOrEmpty(Model.UpdatedBy))
                                {
                                    <small class="text-muted">
                                        <i class="fas fa-clock me-1"></i>
                                        Last updated by @Model.UpdatedBy on @Model.UpdatedAt.ToString("MMM dd, yyyy")
                                    </small>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Plan Statistics -->
                <div class="card mt-4">
                    <div class="card-header bg-info bg-opacity-10">
                        <h5 class="mb-0">
                            <i class="fas fa-chart-bar me-2"></i>Plan Statistics
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-md-3">
                                <h4 class="text-primary">@Model.Goals.Count</h4>
                                <p class="text-muted mb-0">Goals</p>
                            </div>
                            <div class="col-md-3">
                                <h4 class="text-info">@Model.Goals.SelectMany(g => g.Capabilities).Count()</h4>
                                <p class="text-muted mb-0">Capabilities</p>
                            </div>
                            <div class="col-md-3">
                                <h4 class="text-success">@Model.Milestones.Count</h4>
                                <p class="text-muted mb-0">Milestones</p>
                            </div>
                            <div class="col-md-3">
                                <h4 class="text-warning">@Model.DaysRemaining</h4>
                                <p class="text-muted mb-0">Days Remaining</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="card mt-4">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <button type="submit" class="btn btn-success btn-lg">
                                    <i class="fas fa-save me-2"></i>Save Changes
                                </button>
                                <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary btn-lg">
                                    <i class="fas fa-times me-2"></i>Cancel
                                </a>
                            </div>
                            <div>
                                @if (User.IsInRole("Admin"))
                                {
                                    <button type="button" class="btn btn-danger btn-lg" data-bs-toggle="modal" data-bs-target="#deleteModal">
                                        <i class="fas fa-trash me-2"></i>Delete Plan
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
@if (User.IsInRole("Admin"))
{
    <div class="modal fade" id="deleteModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">
                        <i class="fas fa-exclamation-triangle me-2"></i>Confirm Delete
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this strategy plan?</p>
                    <div class="alert alert-warning">
                        <strong>Warning:</strong> This action will permanently delete:
                        <ul class="mb-0">
                            <li>The strategy plan</li>
                            <li>All @Model.Goals.Count goals</li>
                            <li>All @Model.Goals.SelectMany(g => g.Capabilities).Count() capabilities</li>
                            <li>All @Model.Milestones.Count milestones</li>
                        </ul>
                    </div>
                    <p class="mb-0"><strong>This action cannot be undone.</strong></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <form asp-action="Delete" asp-route-id="@Model.Id" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-trash me-1"></i>Delete Plan
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set minimum date for end date based on start date
            const startDateInput = document.querySelector('input[name="StartDate"]');
            const endDateInput = document.querySelector('input[name="EndDate"]');
            
            startDateInput.addEventListener('change', function() {
                endDateInput.min = this.value;
            });
            
            // Initial setup
            if (startDateInput.value) {
                endDateInput.min = startDateInput.value;
            }
            
            // Budget validation
            const totalBudgetInput = document.querySelector('input[name="TotalBudget"]');
            const spentBudgetInput = document.querySelector('input[name="SpentBudget"]');
            
            function validateBudget() {
                const total = parseFloat(totalBudgetInput.value) || 0;
                const spent = parseFloat(spentBudgetInput.value) || 0;
                
                if (total > 0 && spent > total) {
                    spentBudgetInput.setCustomValidity('Spent budget cannot exceed total budget');
                } else {
                    spentBudgetInput.setCustomValidity('');
                }
            }
            
            totalBudgetInput.addEventListener('input', validateBudget);
            spentBudgetInput.addEventListener('input', validateBudget);
        });
    </script>
}
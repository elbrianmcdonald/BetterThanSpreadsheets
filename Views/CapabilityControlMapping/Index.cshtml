@model IEnumerable<CyberRiskApp.Models.CapabilityControlMapping>

@{
    ViewData["Title"] = "Capability Control Mappings";
    var capabilityName = ViewBag.CapabilityName as string;
    var strategyPlanTitle = ViewBag.StrategyPlanTitle as string;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2><i class="fas fa-project-diagram"></i> Capability Control Mappings</h2>
                    @if (!string.IsNullOrEmpty(capabilityName))
                    {
                        <p class="text-muted mb-0">
                            <strong>Strategy Plan:</strong> @strategyPlanTitle<br />
                            <strong>Capability:</strong> @capabilityName
                        </p>
                    }
                </div>
                <div>
                    @if (ViewBag.CapabilityRequirementId != null)
                    {
                        <a asp-action="Create" asp-route-capabilityRequirementId="@ViewBag.CapabilityRequirementId" class="btn btn-primary">
                            <i class="fas fa-plus"></i> Add New Mapping
                        </a>
                        <a asp-controller="CapabilityRequirement" asp-action="Details" asp-route-id="@ViewBag.CapabilityRequirementId" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left"></i> Back to Capability
                        </a>
                    }
                    else
                    {
                        <a asp-action="Create" class="btn btn-primary">
                            <i class="fas fa-plus"></i> Add New Mapping
                        </a>
                    }
                </div>
            </div>

            @if (!Model.Any())
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i>
                    No capability control mappings found. <a asp-action="Create" asp-route-capabilityRequirementId="@ViewBag.CapabilityRequirementId">Create the first mapping</a>.
                </div>
            }
            else
            {
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        @if (ViewBag.CapabilityRequirementId == null)
                                        {
                                            <th>Strategy Plan</th>
                                            <th>Capability</th>
                                        }
                                        <th>Framework</th>
                                        <th>Control</th>
                                        <th>Status</th>
                                        <th>Priority</th>
                                        <th>Estimated Hours</th>
                                        <th>Actual Hours</th>
                                        <th>Target Date</th>
                                        <th>Assigned To</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            @if (ViewBag.CapabilityRequirementId == null)
                                            {
                                                <td>@Html.DisplayFor(modelItem => item.CapabilityRequirement.StrategyGoal.StrategyPlan.PlanName)</td>
                                                <td>@Html.DisplayFor(modelItem => item.CapabilityRequirement.CapabilityName)</td>
                                            }
                                            <td>@Html.DisplayFor(modelItem => item.ComplianceControl.Framework.Name)</td>
                                            <td>
                                                <strong>@Html.DisplayFor(modelItem => item.ComplianceControl.ControlId)</strong><br />
                                                <small class="text-muted">@Html.DisplayFor(modelItem => item.ComplianceControl.Title)</small>
                                            </td>
                                            <td>
                                                <span class="badge bg-@item.StatusColor">
                                                    @Html.DisplayFor(modelItem => item.Status)
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge bg-@item.PriorityColor">
                                                    @Html.DisplayFor(modelItem => item.Priority)
                                                </span>
                                            </td>
                                            <td>@(item.EstimatedHours?.ToString("F1") ?? "-")</td>
                                            <td>@(item.ActualHours?.ToString("F1") ?? "-")</td>
                                            <td>
                                                @if (item.TargetDate.HasValue)
                                                {
                                                    <span class="@(item.IsOverdue ? "text-danger" : "")">
                                                        @item.TargetDate.Value.ToString("MMM dd, yyyy")
                                                    </span>
                                                    @if (item.IsOverdue)
                                                    {
                                                        <br /><small class="text-danger"><i class="fas fa-exclamation-triangle"></i> Overdue</small>
                                                    }
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>@(item.AssignedTo ?? "-")</td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary" title="Edit">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger" title="Delete">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
</div>